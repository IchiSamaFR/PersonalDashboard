<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:models="clr-namespace:InputFields;assembly=InputFields"
                    xmlns:converters="clr-namespace:PersonalDashboard.View.Convertors">

    <converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
    <converters:BitmapToImageSourceConverter x:Key="BitmapToImageSourceConverter"/>
    <converters:DateTimeOffsetToDateConverter x:Key="DateTimeOffsetToDateConverter"/>
    <converters:TextToPasswordDisplayConverter x:Key="TextToPasswordDisplayConverter"/>
    <converters:DatetimeToStringConverter x:Key="DatetimeToStringConverter"/>
    <converters:HtmlToPlainTextConverter x:Key="HtmlToPlainTextConverter"/>

    <Style TargetType="Button" x:Key="Button">
        <Setter Property="Background" Value="{DynamicResource bru_BackgroundItem}"/>
        <Setter Property="Foreground" Value="{DynamicResource bru_LightForeground}"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Border" Background="{TemplateBinding Background}">
                        <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_Background}"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_BackgroundFocused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="CenterButton">
        <Setter Property="Background" Value="{DynamicResource bru_BackgroundDarker}"/>
        <Setter Property="Foreground" Value="{DynamicResource bru_LightForeground}"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="12">
                        <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_Background}"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_BackgroundFocused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="Button" x:Key="ItemButton">
        <Setter Property="Background" Value="{DynamicResource bru_BackgroundItem}"/>
        <Setter Property="Foreground" Value="{DynamicResource bru_LightForeground}"/>
        <Setter Property="Height" Value="26"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Border" Background="{TemplateBinding Background}" CornerRadius="12">
                        <ContentPresenter Content="{Binding Path=Content, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Button}}}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Button.IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_Background}"/>
                        </Trigger>
                        <Trigger Property="Button.IsPressed" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_BackgroundFocused}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="MenuButton">
        <Setter Property="Background" Value="{DynamicResource bru_BackgroundDarker}"/>
        <Setter Property="Foreground" Value="{DynamicResource bru_LightForeground}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Image Source="{Binding Path=Icon, Converter={StaticResource BitmapToImageSourceConverter}}" Width="20" Height="20"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_BackgroundFocused}"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Focused}" Value="True">
                            <Setter Property="Background" Value="{DynamicResource bru_Background}"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBox">
        <Setter Property="Foreground" Value="{DynamicResource bru_DarkForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource bru_Background}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource bru_BackgroundFocused}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type PasswordBox}" x:Key="PasswordBox">
        <Setter Property="Foreground" Value="{DynamicResource bru_DarkForeground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource bru_Background}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Padding" Value="5 0 0 0"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border x:Name="Border" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                        <ScrollViewer x:Name="PART_ContentHost" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsFocused" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource bru_BackgroundFocused}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type ListViewItem}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListViewItem}">
                    <ContentPresenter/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style TargetType="{x:Type Thumb}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border x:Name="rectangle"
                            SnapsToDevicePixels="True"
                            Background="{DynamicResource bru_BackgroundLighter}"
                            Opacity="0.6"
                            CornerRadius="2"
                            Height="{TemplateBinding Height}"
                            Width="{TemplateBinding Width}"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="rectangle" Property="Opacity" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="false"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="false"/>

        <Setter Property="Width" Value="14"/>
        <Setter Property="Margin" Value="-14 5 0 5" />
        <Setter Property="MinWidth" Value="{Binding Height, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollBar}">
                    <Grid x:Name="Bg" SnapsToDevicePixels="true">
                        <Border Padding="0 4">
                            <Track x:Name="PART_Track"
                                   IsDirectionReversed="true"
                                   IsEnabled="{TemplateBinding IsMouseOver}"
                                   Width="8"
                                   HorizontalAlignment="Center">
                                <Track.DecreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageUpCommand}" />
                                </Track.DecreaseRepeatButton>
                                <Track.IncreaseRepeatButton>
                                    <RepeatButton Opacity="0" Command="{x:Static ScrollBar.PageDownCommand}" />
                                </Track.IncreaseRepeatButton>
                                <Track.Thumb>
                                    <Thumb />
                                </Track.Thumb>
                            </Track>
                        </Border>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>